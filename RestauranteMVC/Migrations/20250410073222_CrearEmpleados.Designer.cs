// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestauranteMVC.Models;

#nullable disable

namespace RestauranteMVC.Migrations
{
    [DbContext(typeof(RestauranteDbContext))]
    [Migration("20250410073222_CrearEmpleados")]
    partial class CrearEmpleados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestauranteMVC.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaID"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoriaID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Combo", b =>
                {
                    b.Property<int>("ComboID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComboID"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ComboID");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UrlFotoEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpleadoID");

                    b.HasIndex("RolID");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuID");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Menu_Items", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"));

                    b.Property<int?>("ComboID")
                        .HasColumnType("int");

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<int?>("PlatoID")
                        .HasColumnType("int");

                    b.Property<int?>("PromocionID")
                        .HasColumnType("int");

                    b.HasKey("MenuItemId");

                    b.HasIndex("ComboID");

                    b.HasIndex("MenuID");

                    b.HasIndex("PlatoID");

                    b.HasIndex("PromocionID");

                    b.ToTable("Menu_Items");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Mesa", b =>
                {
                    b.Property<int>("MesaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MesaID"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("NumeroMesa")
                        .HasColumnType("int");

                    b.HasKey("MesaID");

                    b.ToTable("Mesa");
                });

            modelBuilder.Entity("RestauranteMVC.Models.MetodoPago", b =>
                {
                    b.Property<int>("MetodoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MetodoID"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MetodoID");

                    b.ToTable("MetodoPagos");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Plato", b =>
                {
                    b.Property<int>("PlatoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlatoID"));

                    b.Property<int?>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PlatoID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Platos");
                });

            modelBuilder.Entity("RestauranteMVC.Models.PlatosCombos", b =>
                {
                    b.Property<int>("ComboID")
                        .HasColumnType("int");

                    b.Property<int>("PlatoID")
                        .HasColumnType("int");

                    b.HasKey("ComboID", "PlatoID");

                    b.HasIndex("PlatoID");

                    b.ToTable("PlatosCombos");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Promociones", b =>
                {
                    b.Property<int>("PromocionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromocionID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("PromocionID");

                    b.ToTable("Promociones");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Promociones_Items", b =>
                {
                    b.Property<int>("PromocionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromocionItemId"));

                    b.Property<int?>("ComboID")
                        .HasColumnType("int");

                    b.Property<int?>("PlatoID")
                        .HasColumnType("int");

                    b.Property<int?>("PromocionID")
                        .HasColumnType("int");

                    b.HasKey("PromocionItemId");

                    b.HasIndex("ComboID");

                    b.HasIndex("PlatoID");

                    b.HasIndex("PromocionID");

                    b.ToTable("Promociones_Items");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RolID");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Empleado", b =>
                {
                    b.HasOne("RestauranteMVC.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolID");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Menu_Items", b =>
                {
                    b.HasOne("RestauranteMVC.Models.Combo", "Combos")
                        .WithMany()
                        .HasForeignKey("ComboID");

                    b.HasOne("RestauranteMVC.Models.Menu", "Menu")
                        .WithMany("Menu_Items")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestauranteMVC.Models.Plato", "Platos")
                        .WithMany()
                        .HasForeignKey("PlatoID");

                    b.HasOne("RestauranteMVC.Models.Promociones", "Promociones")
                        .WithMany()
                        .HasForeignKey("PromocionID");

                    b.Navigation("Combos");

                    b.Navigation("Menu");

                    b.Navigation("Platos");

                    b.Navigation("Promociones");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Plato", b =>
                {
                    b.HasOne("RestauranteMVC.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("RestauranteMVC.Models.PlatosCombos", b =>
                {
                    b.HasOne("RestauranteMVC.Models.Combo", "Combo")
                        .WithMany("PlatosCombos")
                        .HasForeignKey("ComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestauranteMVC.Models.Plato", "Plato")
                        .WithMany("PlatosCombos")
                        .HasForeignKey("PlatoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("Plato");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Promociones_Items", b =>
                {
                    b.HasOne("RestauranteMVC.Models.Combo", "Combo")
                        .WithMany()
                        .HasForeignKey("ComboID");

                    b.HasOne("RestauranteMVC.Models.Plato", "Plato")
                        .WithMany()
                        .HasForeignKey("PlatoID");

                    b.HasOne("RestauranteMVC.Models.Promociones", "Promocion")
                        .WithMany("Promociones_Items")
                        .HasForeignKey("PromocionID");

                    b.Navigation("Combo");

                    b.Navigation("Plato");

                    b.Navigation("Promocion");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Combo", b =>
                {
                    b.Navigation("PlatosCombos");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Menu", b =>
                {
                    b.Navigation("Menu_Items");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Plato", b =>
                {
                    b.Navigation("PlatosCombos");
                });

            modelBuilder.Entity("RestauranteMVC.Models.Promociones", b =>
                {
                    b.Navigation("Promociones_Items");
                });
#pragma warning restore 612, 618
        }
    }
}
